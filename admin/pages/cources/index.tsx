// Next js hello world

import React, { useEffect } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import CourceCard, { CourceCardProps } from "../../components/card/courceCard";
import { deleteCource, getAllCources } from "../../utils/admin-sdk";
import { AbsoluteCenter, Box, Spinner } from "@chakra-ui/react";
import CourceCardList from "../../components/cardList/courceCardList";
import BottomFloatingButton from "../../components/bottomFloatingButton";
import { FaPlus } from "react-icons/fa";

export default function Cources() {
    const router = useRouter();
    const [ready, setReady] = React.useState(false);

    const [cards, setCards] = React.useState<CourceCardProps[]>([]);

    const prepareData = (data: any) => {
        // API response:
        /* 
            JSON:
            [
                {
                    "_id": {
                        "$oid": "60f3b0b3e3c3310b7c7b0b1b"
                    },
                    "title": "Cource 1",
                    "description": "Cource 1 description",
                    "levels": [
                        [
                            level index,
                            [ levels
                                { level node
                                    "id": "60f3b0b3e3c3310b7c7b0b1c",
                                    "title": "Level 1",
                                    "mini_img": "https://i.imgur.com/0Q2h4Yv.png",
                                    "type_": "test" // test or info
                                    "n_of_tests": 3, // if type_ is test
                                },
                                ...
                            ]
                        ],
                        ...
                    ]
                },
                ...
            ]
        */
        // Card props:
        /* 
            {
                id: "60f3b0b3e3c3310b7c7b0b1b",
                title: "Cource 1",
                onClick: (id: string) => {},
                onDelete: () => {},
            }
        */
        const cards: CourceCardProps[] = [];
        for (let i = 0; i < data.length; i++) {
            cards.push({
                id: data[i]._id["$oid"],
                title: data[i].title,
                onClick: (id: string) => {
                    editButtonHandler(id);
                },
                onDelete: () => {
                    let id = data[i]._id["$oid"];
                    deleteButtonHandler(id);
                },
            });
        }
        setCards(cards);
    };

    const editButtonHandler = (id: string) => {
        router.push(`/cources/edit/${id}`);
    };

    const deleteButtonHandler = (id: string) => {
        deleteCource(id).then((data) => {
            setReady(false);
        });
    };

    useEffect(() => {
        getAllCources().then((data) => {
            prepareData(data);
        });
        setReady(true);
    }, [ready]);

    return (
        <>
            <Head>
                <title>Cources</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <Box>
                {ready ? (
                    <CourceCardList cards={cards} />
                ) : (
                    <AbsoluteCenter>
                        <Spinner
                            thickness="3px"
                            speed="0.65s"
                            emptyColor="gray.200"
                            color="orange.400"
                            size="xl"
                        />
                    </AbsoluteCenter>
                )}
            </Box>
            <BottomFloatingButton
                onClick={() => {
                    router.push("/cources/create");
                }}
                icon={<FaPlus size={30} />}
            />
        </>
    );
}
