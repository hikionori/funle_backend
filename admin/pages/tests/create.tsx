import {
    AbsoluteCenter,
    Button,
    Center,
    HStack,
    Input,
    Menu,
    MenuOptionGroup,
    Radio,
    RadioGroup,
    Switch,
    Text,
} from "@chakra-ui/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import { FaPlus } from "react-icons/fa";
import AddOptionButton from "../../components/addOptionButton";
import BottomFloatingButton from "../../components/bottomFloatingButton";
import OptionCard from "../../components/option";

interface ActionsOptionsChoice {
    text: string;
    isCorrect: boolean;
}

interface ActionsOptionsAction {
    text: string;
}

export default function CreateNewTest() {
    const [testType, setTestType] = useState<"choice" | "action">("choice"); // "choice" or "action"

    // if testType is "choice", this is the list of choices
    // if testType is "action", this is the list of actions
    const [actions, setActions] = useState<
        ActionsOptionsChoice[] | ActionsOptionsAction[]
    >([]);

    const [question, setQuestion] = useState<string>("");

    useEffect(() => {
        console.log(testType);
    }, [testType]);

    const onTestTypeChanged = (value: string) => {
        setTestType(value as "choice" | "action");
        setActions([]);
    };

    return (
        <>
            <Head>
                <title>Create New Test</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <AbsoluteCenter w={"400px"}>
                {/* Text of question */}
                <Input
                    value={question}
                    onChange={(e) => setQuestion(e.target.value)}
                    border={"1px solid black"}
                    placeholder={"Question"}
                    focusBorderColor={"orange.500"}
                    _hover={{
                        borderColor: "orange.400",
                        bgColor: "orange.50",
                        _placeholder: { color: "blackAlpha.900" },
                    }}
                />
                {/* Text type switch */}
                <Center>
                    <RadioGroup
                        onChange={onTestTypeChanged}
                        value={testType}
                        colorScheme="orange"
                    >
                        <HStack justifyContent={"space-around"}>
                            <Radio value="choice">Choice</Radio>
                            <Radio value="action">Action</Radio>
                        </HStack>
                    </RadioGroup>
                </Center>
                {/* if type "choice" or "action" and actions list is empty display button */}
                {
                    /* Map actions */
                    actions.map((action, index) => {
                        if (testType === "choice") {
                            return (
                                <OptionCard
                                    type={testType}
                                    key={index}
                                    onDelete={() => {}}
                                />
                            );
                        } else {
                            return (
                                <OptionCard
                                    type={testType}
                                    key={index}
                                    onDelete={() => {}}
                                />
                            );
                        }
                    })
                }
                {/* if type "choice" or "action" and actions list is not empty display list with button on bottom list */}
                {/* Create button with onClick method */}
                <AddOptionButton
                    _type={testType}
                    onClick={() => {
                        // TODO: add new option to actions list
                        if (testType === "choice") {
                            setActions([
                                ...actions,
                                {
                                    text: "",
                                    isCorrect: false,
                                },
                            ]);
                        } else {
                            setActions([
                                ...actions,
                                {
                                    text: "",
                                },
                            ]);
                        }
                    }}
                />
            </AbsoluteCenter>
            <BottomFloatingButton
                text="Create"
                icon={<FaPlus />}
                onClick={() => {}}
            />
        </>
    );
}
