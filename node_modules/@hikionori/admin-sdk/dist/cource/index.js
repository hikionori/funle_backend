"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteCource = exports.updateCource = exports.createCource = exports.getCourceById = exports.getAllCources = exports.LevelBuilder = exports.Type = exports.CourceBuilder = void 0;
const axios_1 = require("axios");
const config_1 = require("../config");
class CourceBuilder {
    setId(id) {
        this.id = id;
    }
    setTitle(title) {
        this.title = title;
    }
    setDescription(description) {
        this.description = description;
    }
    setLevels(levels) {
        this.levels = levels;
    }
    getId() {
        return this.id;
    }
    getDesription() {
        return this.description;
    }
    getTitle() {
        return this.title;
    }
    getLevels() {
        return this.levels;
    }
}
exports.CourceBuilder = CourceBuilder;
var Type;
(function (Type) {
    Type["Info"] = "info";
    Type["Test"] = "test";
})(Type = exports.Type || (exports.Type = {}));
class LevelBuilder {
    setId(id) {
        this.id = id;
    }
    setTitle(title) {
        this.title = title;
    }
    setMiniImage(bytes) {
        this.mini_image = bytes;
    }
    setType(type) {
        this.type_ = type;
    }
    setNOfTests(n_of_tests) {
        this.n_of_tests = n_of_tests;
    }
}
exports.LevelBuilder = LevelBuilder;
// Get all cources
const getAllCources = () => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield axios_1.default.get(`${config_1.baseUrl}/admin/get/cources/all`);
    return res;
});
exports.getAllCources = getAllCources;
// Get cource by id
const getCourceById = (id) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield axios_1.default.get(`${config_1.baseUrl}/admin/get/cource?id=${id}`);
    return res;
});
exports.getCourceById = getCourceById;
// Create cource
const createCource = (cource) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield axios_1.default.post(`${config_1.baseUrl}/admin/add/cource`, cource);
    return res;
});
exports.createCource = createCource;
// Update cource
const updateCource = (id, cource) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield axios_1.default.put(`${config_1.baseUrl}/admin/update/cource?id=${id}`, cource);
    return res;
});
exports.updateCource = updateCource;
// Delete cource
const deleteCource = (id) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield axios_1.default.delete(`${config_1.baseUrl}/admin/delete/cource?id=${id}`);
});
exports.deleteCource = deleteCource;
