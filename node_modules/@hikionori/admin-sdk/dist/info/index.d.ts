export interface Info {
    id: string | "None";
    title: string;
    theme: string;
    content_levels: {
        [key: number]: Content[];
    };
}
export interface Content {
    content_type: string;
    data: Uint8Array;
}
export declare class ContentBuilder implements Content {
    content_type: string;
    data: Uint8Array;
    setContentType(content_type: string): void;
    setData(data: Uint8Array): void;
    getContentType(): string;
    getData(): Uint8Array;
}
export declare class InfoBuilder implements Info {
    id: string;
    title: string;
    theme: string;
    content_levels: {
        [key: number]: Content[];
    };
    setId(id: string | "None"): void;
    setTitle(title: string): void;
    setTheme(theme: string): void;
    setContentLevels(content_levels: {
        [key: number]: Content[];
    }): void;
    getId(): string;
    getTitle(): string;
    getTheme(): string;
    getContentLevels(): {
        [key: number]: Content[];
    };
}
export declare function getInfoById(id: string): Promise<import("axios").AxiosResponse<any, any>>;
export declare function getAllInfos(): Promise<import("axios").AxiosResponse<any, any>>;
export declare function createInfo(info: Info): Promise<import("axios").AxiosResponse<any, any>>;
export declare function updateInfo(id: string, info: Info): Promise<import("axios").AxiosResponse<any, any>>;
export declare function deleteInfo(id: string): Promise<import("axios").AxiosResponse<any, any>>;
